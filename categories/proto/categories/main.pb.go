// Code generated by protoc-gen-go.
// source: github.com/sunfmin/myou/categories/proto/categories/main.proto
// DO NOT EDIT!

/*
Package myou_srv_categories is a generated protocol buffer package.

It is generated from these files:
	github.com/sunfmin/myou/categories/proto/categories/main.proto

It has these top-level messages:
	Project
	Filter
	Category
	CategoryList
*/
package myou_srv_categories

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Project struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *Project) Reset()                    { *m = Project{} }
func (m *Project) String() string            { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()               {}
func (*Project) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Filter struct {
	Project *Project `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	Name    string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Filter) Reset()                    { *m = Filter{} }
func (m *Filter) String() string            { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()               {}
func (*Filter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Filter) GetProject() *Project {
	if m != nil {
		return m.Project
	}
	return nil
}

type Category struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CategoryList struct {
	Categories []*Category `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
}

func (m *CategoryList) Reset()                    { *m = CategoryList{} }
func (m *CategoryList) String() string            { return proto.CompactTextString(m) }
func (*CategoryList) ProtoMessage()               {}
func (*CategoryList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CategoryList) GetCategories() []*Category {
	if m != nil {
		return m.Categories
	}
	return nil
}

func init() {
	proto.RegisterType((*Project)(nil), "myou.srv.categories.Project")
	proto.RegisterType((*Filter)(nil), "myou.srv.categories.Filter")
	proto.RegisterType((*Category)(nil), "myou.srv.categories.Category")
	proto.RegisterType((*CategoryList)(nil), "myou.srv.categories.CategoryList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Categories service

type CategoriesClient interface {
	List(ctx context.Context, in *Filter, opts ...client.CallOption) (*CategoryList, error)
}

type categoriesClient struct {
	c           client.Client
	serviceName string
}

func NewCategoriesClient(serviceName string, c client.Client) CategoriesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "myou.srv.categories"
	}
	return &categoriesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *categoriesClient) List(ctx context.Context, in *Filter, opts ...client.CallOption) (*CategoryList, error) {
	req := c.c.NewRequest(c.serviceName, "Categories.List", in)
	out := new(CategoryList)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Categories service

type CategoriesHandler interface {
	List(context.Context, *Filter, *CategoryList) error
}

func RegisterCategoriesHandler(s server.Server, hdlr CategoriesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Categories{hdlr}, opts...))
}

type Categories struct {
	CategoriesHandler
}

func (h *Categories) List(ctx context.Context, in *Filter, out *CategoryList) error {
	return h.CategoriesHandler.List(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/sunfmin/myou/categories/proto/categories/main.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x4b, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0x2e, 0xcd, 0x4b, 0xcb, 0xcd, 0xcc, 0xd3, 0xcf,
	0xad, 0xcc, 0x2f, 0xd5, 0x4f, 0x4e, 0x2c, 0x49, 0x4d, 0xcf, 0x2f, 0xca, 0x4c, 0x2d, 0xd6, 0x2f,
	0x28, 0xca, 0x2f, 0xc9, 0x47, 0x16, 0xc8, 0x4d, 0xcc, 0xcc, 0xd3, 0x03, 0x8b, 0x0a, 0x09, 0x83,
	0x14, 0xeb, 0x15, 0x17, 0x95, 0xe9, 0x21, 0xe4, 0x95, 0x24, 0xb9, 0xd8, 0x03, 0x8a, 0xf2, 0xb3,
	0x52, 0x93, 0x4b, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0x80, 0x2c, 0xa5, 0x10, 0x2e, 0x36, 0xb7, 0xcc, 0x9c, 0x92, 0xd4, 0x22, 0x21, 0x33, 0x2e, 0xf6,
	0x02, 0x88, 0x22, 0xb0, 0x34, 0xb7, 0x91, 0x8c, 0x1e, 0x16, 0xb3, 0xf4, 0xa0, 0x06, 0x05, 0xc1,
	0x14, 0x0b, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x81, 0xcd, 0x04, 0xb3, 0x95,
	0xf4, 0xb8, 0x38, 0x9c, 0x21, 0x5a, 0x2a, 0xd1, 0x6d, 0xc4, 0xaa, 0xde, 0x97, 0x8b, 0x07, 0xa6,
	0xde, 0x27, 0xb3, 0xb8, 0x44, 0xc8, 0x96, 0x8b, 0x0b, 0x61, 0x25, 0x50, 0x2f, 0x33, 0xd0, 0x39,
	0xb2, 0x58, 0x9d, 0x03, 0xd3, 0x16, 0x84, 0xa4, 0xc1, 0x28, 0x8c, 0x8b, 0xcb, 0x19, 0xce, 0x13,
	0xf2, 0xe0, 0x62, 0x01, 0x1b, 0x2a, 0x8d, 0xd5, 0x00, 0x88, 0xef, 0xa5, 0x14, 0xf1, 0x9a, 0x0e,
	0xd2, 0xaf, 0xc4, 0x90, 0xc4, 0x06, 0x0e, 0x63, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0xf8, 0xe1, 0xff, 0xa5, 0x01, 0x00, 0x00,
}
